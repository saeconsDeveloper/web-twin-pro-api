from two_factor.utils import totp_digits
from urllib.parse import quote, urlencode
from django.utils.decorators import method_decorator
from django_otp.plugins.otp_totp.models import TOTPDevice
from django_otp import devices_for_user

from two_factor_auth.models import ProxyTOTPDevice

def get_user_totp_device(user, confirmed=None):
    '''
    Get TOTP device for user
    '''
    devices = devices_for_user(user, confirmed=confirmed)
    
    for device in devices:
        if isinstance(device, ProxyTOTPDevice):
            return device

def create_totp_device(user):
    '''
    Create Totp Device and return qr Code 
    '''
    device = get_user_totp_device(user)

    if not device:
        device = user.totpdevice_set.create(confirmed=False)
        device = ProxyTOTPDevice.objects.filter(pk=device.pk).first()
    url = device.config_url
    return url

def verify_totp_token(user, token):
    '''
    Verify token generated by authenticator
    '''
    device = get_user_totp_device(user)
    if not device == None and device.verify_token(token):
        if not device.confirmed:
            device.confirmed = True
            device.save()
        return True
    return False