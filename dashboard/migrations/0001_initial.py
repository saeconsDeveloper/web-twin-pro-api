# Generated by Django 5.2.1 on 2025-05-27 07:57

import dashboard.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sessions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('text', models.CharField(max_length=255)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('show_in_filter', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BuildYourExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('directus_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CallToAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('directus_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('action_type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FilterIcon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('teleportation_icon', models.FileField(blank=True, null=True, upload_to='filter-icons')),
                ('revenue_stack_icon', models.FileField(blank=True, null=True, upload_to='filter-icons')),
                ('geo_dot_icon', models.FileField(blank=True, null=True, upload_to='filter-icons')),
                ('video_icon', models.FileField(blank=True, null=True, upload_to='filter-icons')),
                ('annotation_icon', models.FileField(blank=True, null=True, upload_to='filter-icons')),
                ('product_icon', models.FileField(blank=True, null=True, upload_to='filter-icons')),
                ('image_icon', models.FileField(blank=True, null=True, upload_to='filter-icons')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Geography',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('display_name', models.CharField(max_length=255)),
                ('display_image', models.ImageField(blank=True, null=True, upload_to='geographies/images')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('robotics_image', models.ImageField(blank=True, null=True, upload_to='geographies/robotics/images', verbose_name='Robotics Image')),
                ('visitors_image', models.ImageField(blank=True, null=True, upload_to='geographies/robotics/images', verbose_name='Visitors Image')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published')], default='DRAFT', max_length=255)),
            ],
            options={
                'verbose_name': 'Geography',
                'verbose_name_plural': 'Geographies',
                'ordering': ['display_name'],
            },
        ),
        migrations.CreateModel(
            name='Legend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('directus_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetaPanelImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('directus_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetaPanelLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('directus_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPanel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('display_text', models.CharField(max_length=255, verbose_name='Name')),
                ('hyperlink', models.CharField(blank=True, max_length=255, null=True)),
                ('product_description', models.CharField(max_length=600, verbose_name='Description')),
                ('model_3d', models.FileField(blank=True, help_text='Please embed your textures into the 3D model file and use correct procedure.', null=True, upload_to='models', verbose_name='Panel 3D Model (.FBX, .gltf, .glb)')),
                ('asset', models.CharField(blank=True, max_length=255, null=True, verbose_name="Vendor's Service name")),
                ('asset_description', models.CharField(blank=True, max_length=1500, null=True, verbose_name="Vendor's Service description")),
                ('pricing_of_tiers', models.CharField(blank=True, max_length=255, null=True, verbose_name='Price')),
                ('vendor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Vendor Name')),
                ('priority', models.CharField(blank=True, choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], max_length=255, null=True)),
                ('service_owner', models.CharField(blank=True, max_length=255, null=True, verbose_name="Manager's Name")),
                ('how_to_request', models.CharField(blank=True, max_length=255, null=True, verbose_name='How to Request')),
                ('position_x', models.PositiveIntegerField(blank=True, null=True)),
                ('position_y', models.PositiveIntegerField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published')], default='DRAFT', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTier1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published')], default='DRAFT', max_length=255)),
                ('image', models.FileField(blank=True, null=True, upload_to='tier1-products', verbose_name='Image')),
                ('description', models.TextField(blank=True, null=True)),
                ('model_3d', models.FileField(blank=True, help_text='Please embed your textures into the 3D model file and use correct procedure.', null=True, upload_to='models', verbose_name='Panel 3D Model (.FBX, .gltf, .glb)')),
                ('product_button_id', models.CharField(blank=True, max_length=255, null=True)),
                ('icon_image', models.ImageField(blank=True, null=True, upload_to='tier1-products', verbose_name='Icon')),
                ('show_in_filter', models.BooleanField(default=False)),
                ('position_x', models.PositiveIntegerField(blank=True, null=True)),
                ('position_y', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'ProductTier1',
                'verbose_name_plural': 'ProductsTier1',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SceneGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('color', models.CharField(default='#123088', max_length=7)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('category_id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published')], default='DRAFT', max_length=255)),
                ('image', models.FileField(blank=True, null=True, upload_to='sector/images', verbose_name='Icon')),
                ('description', models.TextField(blank=True, null=True)),
                ('banner_image', models.FileField(upload_to='sector/images', verbose_name='Mobile Banner Image')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('show_in_filter', models.BooleanField(default=False)),
                ('position_x', models.PositiveIntegerField(blank=True, null=True)),
                ('position_y', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Sector',
                'verbose_name_plural': 'Sectors',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('directus_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=2048, null=True)),
                ('image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('icon_url', models.CharField(blank=True, max_length=255, null=True)),
                ('show_in_filter', models.BooleanField(default=False)),
                ('position_x', models.PositiveIntegerField(blank=True, null=True)),
                ('position_y', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('directus_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('position_x', models.PositiveIntegerField(blank=True, null=True)),
                ('position_y', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShareIcon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('show_facebook', models.BooleanField(default=False)),
                ('facebook_icon', models.ImageField(blank=True, null=True, upload_to='configs')),
                ('show_twitter', models.BooleanField(default=False)),
                ('twitter_icon', models.ImageField(blank=True, null=True, upload_to='configs')),
                ('show_linkedin', models.BooleanField(default=False)),
                ('linkedin_icon', models.ImageField(blank=True, null=True, upload_to='configs')),
                ('show_pinterest', models.BooleanField(default=False)),
                ('pinterest_icon', models.ImageField(blank=True, null=True, upload_to='configs')),
                ('show_email', models.BooleanField(default=False)),
                ('email_icon', models.ImageField(blank=True, null=True, upload_to='configs')),
                ('show_copy_link', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThemeOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('key', models.CharField(max_length=128)),
                ('value', models.TextField()),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='UnityScene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('background_image', models.ImageField(blank=True, null=True, upload_to='unity/images', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'svg', 'jpg', 'jpeg'])], verbose_name='Loading Image')),
                ('loading_text', models.CharField(blank=True, max_length=1024, null=True)),
                ('unity_file', models.FileField(upload_to='unity/zips', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['zip'])])),
            ],
            options={
                'verbose_name': 'Unity Scene',
                'verbose_name_plural': 'Unity Scenes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('file', models.FileField(upload_to='files')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_type', models.CharField(max_length=255, verbose_name='Model Type')),
                ('object_id', models.IntegerField(verbose_name='Model Id')),
                ('object_str', models.CharField(max_length=255, verbose_name='Model Str')),
                ('action', models.CharField(max_length=255)),
                ('ip', models.GenericIPAddressField(null=True)),
                ('instance', models.JSONField(null=True)),
                ('previous_instance', models.JSONField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CallToActionPro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('unity_scene_annotation_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unity Scene Annotation Id')),
                ('annotation_title', models.CharField(blank=True, max_length=255, null=True)),
                ('unity_scene_teleportation_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unity Scene Teleportation Id')),
                ('unity_scene_video_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unity Scene Video Id')),
                ('revenue_stack_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Revenue Stack Number')),
                ('embed_link', models.CharField(blank=True, max_length=255, null=True, verbose_name='Video Embed Link')),
                ('wtp_scene_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='WTP Scene Id')),
                ('wtp_scene_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='WTP Scene Name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='call-to-action-pro')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published')], default='DRAFT', max_length=255)),
                ('top', models.PositiveIntegerField(blank=True, null=True)),
                ('left', models.PositiveIntegerField(blank=True, null=True)),
                ('action_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call_to_actions_pro', to='dashboard.actiontype')),
            ],
            options={
                'verbose_name': 'Call to action pro',
                'verbose_name_plural': 'Call to actions pro',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='CallToActionProPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('scene_id', models.PositiveIntegerField()),
                ('position_x', models.PositiveIntegerField()),
                ('position_y', models.PositiveIntegerField()),
                ('call_to_actions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position', to='dashboard.calltoactionpro')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FileLibrary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_folders', to='dashboard.filelibrary')),
            ],
            options={
                'verbose_name': 'FileLibrary',
                'verbose_name_plural': 'FileLibraries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Model3D',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('file', models.FileField(help_text='Please embed your textures into the 3D model file and use correct procedure.', upload_to='models', verbose_name='Panel 3D Model (.FBX, .gltf, .glb)')),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='model3Ds', to='dashboard.filelibrary')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPanelFilterSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('sector_id', models.PositiveIntegerField()),
                ('sector_name', models.CharField(blank=True, max_length=255, null=True)),
                ('scene_id', models.PositiveIntegerField()),
                ('scene_name', models.CharField(blank=True, max_length=255, null=True)),
                ('launch_year', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('is_disabled', models.BooleanField(default=False)),
                ('product_panel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.productpanel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPanelPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('scene_id', models.PositiveIntegerField()),
                ('position_x', models.PositiveIntegerField()),
                ('position_y', models.PositiveIntegerField()),
                ('product_panel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position', to='dashboard.productpanel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='productpanel',
            name='service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_panels', to='dashboard.producttier1', verbose_name='Product Categories Tiers 1'),
        ),
        migrations.CreateModel(
            name='ProductTier1Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('scene_id', models.PositiveIntegerField()),
                ('position_x', models.PositiveIntegerField()),
                ('position_y', models.PositiveIntegerField()),
                ('product_tier_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position', to='dashboard.producttier1')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Scene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published')], default='DRAFT', max_length=255)),
                ('web_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Web Url')),
                ('image', models.FileField(upload_to='scene/images')),
                ('description', models.CharField(max_length=255)),
                ('priority', models.PositiveIntegerField(default=0, verbose_name='Group Order')),
                ('build_your_experience', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scenes', to='dashboard.buildyourexperience', verbose_name='Call-to-Actions')),
                ('call_to_actions', models.ManyToManyField(blank=True, related_name='scenes', to='dashboard.calltoactionpro', verbose_name='Call-to-actions')),
                ('geography', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scenes', to='dashboard.geography')),
                ('legend', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scenes', to='dashboard.legend')),
                ('meta_panel_images', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scenes', to='dashboard.metapanelimage')),
                ('meta_panel_links', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scenes', to='dashboard.metapanellink')),
                ('next', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='previousscenes', to='dashboard.scene')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_scenes', to='dashboard.scene')),
                ('previous', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nextscenes', to='dashboard.scene')),
                ('tech_and_digital_services', models.ManyToManyField(blank=True, related_name='product_scenes', to='dashboard.productpanel')),
                ('tech_and_digital_services_tier_1', models.ManyToManyField(blank=True, related_name='+', to='dashboard.producttier1')),
                ('scene_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scenes', to='dashboard.scenegroup', verbose_name='Group')),
                ('sectors_and_departments', models.ManyToManyField(blank=True, related_name='sector_scenes', to='dashboard.sector')),
                ('unity_scene', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scenes', to='dashboard.unityscene')),
            ],
            options={
                'verbose_name': 'Scene',
                'verbose_name_plural': 'Scenes',
                'ordering': ['priority', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='geography',
            name='robotics_scene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roboticsscenegeographies', to='dashboard.scene'),
        ),
        migrations.AddField(
            model_name='geography',
            name='scene_children',
            field=models.ManyToManyField(blank=True, related_name='parent_scene_geography', to='dashboard.scene'),
        ),
        migrations.AddField(
            model_name='geography',
            name='visitors_scene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visitorsscenegeographies', to='dashboard.scene'),
        ),
        migrations.AddField(
            model_name='calltoactionpro',
            name='scene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='call_to_actions_pro', to='dashboard.scene'),
        ),
        migrations.AddField(
            model_name='producttier1',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tier1_products', to='dashboard.sector'),
        ),
        migrations.CreateModel(
            name='ServicePosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('scene_id', models.PositiveIntegerField()),
                ('position_x', models.PositiveIntegerField()),
                ('position_y', models.PositiveIntegerField()),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position', to='dashboard.service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='service',
            name='subcategories',
            field=models.ManyToManyField(blank=True, to='dashboard.servicesubcategory'),
        ),
        migrations.AddField(
            model_name='productpanel',
            name='subcategory',
            field=models.ManyToManyField(blank=True, related_name='product_panels', to='dashboard.servicesubcategory', verbose_name='Product Sub Categories Tiers 2'),
        ),
        migrations.CreateModel(
            name='SiteConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('navbar_logo', models.FileField(blank=True, null=True, upload_to='configs', verbose_name='Navbar Logo')),
                ('favicon', models.FileField(blank=True, null=True, upload_to='configs', verbose_name='Favicon')),
                ('holobite_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Holobite Name')),
                ('holobite_display', models.BooleanField(default=False, verbose_name='Display')),
                ('annotation_filter', models.BooleanField(default=False, verbose_name='Annotation')),
                ('show_mobile_version', models.BooleanField(default=False, verbose_name='Show Mobile Version')),
                ('loading_image', models.FileField(blank=True, null=True, upload_to='configs', verbose_name='Loading Image')),
                ('default_loading_text', models.CharField(blank=True, default='Loading scene...', max_length=255, null=True, verbose_name='Default Loading Text')),
                ('analytics_header', models.TextField(blank=True, null=True, verbose_name='Analytics for Header')),
                ('analytics_body', models.TextField(blank=True, null=True, verbose_name='Analytics for Body')),
                ('analytics_footer', models.TextField(blank=True, null=True, verbose_name='Analytics for Footer')),
                ('cta', models.CharField(default='Interactions', max_length=255, verbose_name='Call to Action')),
                ('sector', models.CharField(default='Categories', max_length=255, verbose_name='Sector')),
                ('product_tier_1', models.CharField(default='Product Categories', max_length=255, verbose_name='Product Tier 1')),
                ('product_entities_tier_3', models.CharField(default='Products', max_length=255, verbose_name='Product Entities Tier 3')),
                ('scene', models.CharField(default='Scene', max_length=255, verbose_name='Scene')),
                ('contact_number', models.CharField(blank=True, default='0800 100 392 121', max_length=255, null=True)),
                ('immersive_experience', models.BooleanField(default=False, verbose_name='Immersive Experience')),
                ('browse_without_login', models.BooleanField(default=False, verbose_name='Browse Without Login')),
                ('contact_form_recipients', models.JSONField(blank=True, null=True, verbose_name='Contact Form Recipients')),
                ('default_scene', models.ForeignKey(blank=True, default=dashboard.models.Scene.get_default, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_scene', to='dashboard.scene')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubCategoryPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('scene_id', models.PositiveIntegerField()),
                ('position_x', models.PositiveIntegerField()),
                ('position_y', models.PositiveIntegerField()),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position', to='dashboard.servicesubcategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomePageOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('option', models.CharField(blank=True, choices=[('IMAGE', 'Image'), ('SCENE', 'Scene'), ('VIDEO', 'Video')], default='IMAGE', max_length=255, null=True, verbose_name='Option')),
                ('image', models.ImageField(blank=True, null=True, upload_to='configs')),
                ('video_embed_code', models.TextField(blank=True, null=True, verbose_name='Video/Audio Embed Code')),
                ('view_type', models.CharField(choices=[('NORMAL', 'Normal'), ('GALLERY', 'Gallery')], default='NORMAL', max_length=255)),
                ('scene', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='home_page_options', to='dashboard.unityscene')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitySceneVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.CharField(max_length=255, verbose_name='Version name')),
                ('content_json', models.JSONField(blank=True, null=True)),
                ('unity_scene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='dashboard.unityscene')),
            ],
            options={
                'verbose_name': 'Unity Scene version',
                'verbose_name_plural': 'Unity Scene versions',
                'ordering': ['version'],
            },
        ),
        migrations.AddField(
            model_name='scene',
            name='unity_scene_version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scenes', to='dashboard.unitysceneversion'),
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sessions.session')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
